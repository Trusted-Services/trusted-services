#-------------------------------------------------------------------------------
# Copyright (c) 2021-2022, Arm Limited and Contributors. All rights reserved.
#
# SPDX-License-Identifier: BSD-3-Clause
#
#-------------------------------------------------------------------------------

set(CMAKE_INSTALL_PREFIX @BUILD_INSTALL_DIR@ CACHE STRING "")
set(CMAKE_TOOLCHAIN_FILE @TS_EXTERNAL_LIB_TOOLCHAIN_FILE@ CACHE STRING "")
set(BUILD_SHARED_LIBS Off CACHE BOOL "")
set(BUILD_STATIC_LIBS On CACHE BOOL "")
set(nanopb_BUILD_RUNTIME On CACHE BOOL "")
set(nanopb_BUILD_GENERATOR On CACHE BOOL "")
set(nanopb_MSVC_STATIC_RUNTIME Off BOOL "")
set(nanopb_PROTOC_PATH ${CMAKE_SOURCE_DIR}/generator/protoc CACHE STRING "")

string(TOUPPER @CMAKE_CROSSCOMPILING@ CMAKE_CROSSCOMPILING) # CMake expects TRUE
if (CMAKE_CROSSCOMPILING)
	set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY CACHE STRING "")
endif()

set(NANOPB_EXTERNAL_INCLUDE_PATHS "@NANOPB_EXTERNAL_INCLUDE_PATHS@" CACHE STRING "")
set(NANOPB_EXTERNAL_SYSTEM_INCLUDE_PATHS "@NANOPB_EXTERNAL_SYSTEM_INCLUDE_PATHS@" CACHE STRING "")

if (NOT "${NANOPB_EXTERNAL_INCLUDE_PATHS}" STREQUAL "")
	string(REPLACE " " " -I " NANOPB_EXTERNAL_INCLUDE_PATHS "${NANOPB_EXTERNAL_INCLUDE_PATHS}")
	string(APPEND CMAKE_C_FLAGS_INIT " -I ${NANOPB_EXTERNAL_INCLUDE_PATHS}")
endif()

if (NOT "${NANOPB_EXTERNAL_SYSTEM_INCLUDE_PATHS}" STREQUAL "")
	string(REPLACE " " " -isystem " NANOPB_EXTERNAL_SYSTEM_INCLUDE_PATHS "${NANOPB_EXTERNAL_SYSTEM_INCLUDE_PATHS}")
	string(APPEND CMAKE_C_FLAGS_INIT " -isystem ${NANOPB_EXTERNAL_SYSTEM_INCLUDE_PATHS}")
endif()

set(CMAKE_C_FLAGS_INIT "${CMAKE_C_FLAGS_INIT}" CACHE STRING "")
